version = "2.0.0"

ext.JDROID_GITHUB_REPOSITORY_NAME = "jdroid-gradle-plugin"

// https://github.com/maxirosson/jdroid-gradle-plugin/blob/master/CHANGELOG.md
ext.JDROID_GRADLE_PLUGIN_VERSION = "1.1.0"

// https://github.com/maxirosson/jdroid-java/blob/master/CHANGELOG.md
ext.JDROID_JAVA_VERSION = "2.0.0"

// https://plugins.gradle.org/plugin/com.gradle.plugin-publish
ext.GRADLE_PLUGIN_PUBLISH_PLUGIN = "0.9.8"

// https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md
ext.KOTLIN_VERSION = "1.3.31"

apply plugin: "com.jdroid.component.builder"
apply plugin: "com.jdroid.root"

buildscript {
	repositories {
//		jcenter {
//			mavenContent {
//				releasesOnly()
//			}
//		}
		jcenter()
		google()
		String localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
		boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
		if (isLocalMavenRepoEnabled) {
			String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
			if (localMavenRepo != null) {
				maven {
					url = localMavenRepo
//					content {
//						includeGroup("com.jdroidtools")
//					}
				}
			}
		}
		maven {
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
//			content {
//				includeGroup("com.jdroidtools")
//			}
//			mavenContent {
//				snapshotsOnly()
//			}
		}
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		// https://github.com/maxirosson/jdroid-component-builder/blob/master/CHANGELOG.md
		classpath("com.jdroidtools:jdroid-component-builder:1.1.0")
//			{
//			exclude group: 'com.gradle', module: 'build-scan-plugin'
//		}

		// TODO Remove this line (and the exclude) when upgrading to jdroid-component-builder:2.0.0
		//classpath("com.gradle:build-scan-plugin:2.2.1")

		// https://github.com/maxirosson/jdroid-gradle-plugin/blob/master/CHANGELOG.md
		classpath("com.jdroidtools:jdroid-gradle-root-plugin:1.1.0")
	}
}

subprojects {
	buildscript {
		repositories {
//			jcenter {
//				mavenContent {
//					releasesOnly()
//				}
//			}
			jcenter()
			google()
			String localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
			boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
			if (isLocalMavenRepoEnabled) {
				String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
				if (localMavenRepo != null) {
					maven {
						url = localMavenRepo
//						content {
//							includeGroup("com.jdroidtools")
//						}
					}
				}
			}
			maven {
				url = "https://oss.sonatype.org/content/repositories/snapshots/"
			}
			mavenCentral()
			gradlePluginPortal()
		}
	}

	repositories {
//		jcenter {
//			mavenContent {
//				releasesOnly()
//			}
//		}
		jcenter()
		google()
		String localMavenRepoEnabled = project.hasProperty("LOCAL_MAVEN_REPO_ENABLED") ? project.ext.get("LOCAL_MAVEN_REPO_ENABLED") : System.getenv("LOCAL_MAVEN_REPO_EMABLED")
		boolean isLocalMavenRepoEnabled = localMavenRepoEnabled != null && localMavenRepoEnabled == "true"
		if (isLocalMavenRepoEnabled) {
			String localMavenRepo = project.hasProperty("LOCAL_MAVEN_REPO") ? project.ext.get("LOCAL_MAVEN_REPO") : System.getenv("LOCAL_MAVEN_REPO")
			if (localMavenRepo != null) {
				maven {
					url = localMavenRepo
//					content {
//						includeGroup("com.jdroidtools")
//					}
				}
			}
		}
		maven {
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
//			content {
//				includeGroup("com.jdroidtools")
//			}
//			mavenContent {
//				snapshotsOnly()
//			}
		}
		mavenCentral()
	}
}
